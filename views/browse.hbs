<div class="container">
  <div class="mt-1 col-12 col-md-10 col-lg-8 col-xl-8" id='body'><h2>{{title}}</h2>
    <div class="row">
      <div id="browseContainer" class="col-12">
      </div>
  </div>
</div>
<script>

  //loads navigation element of 'browse' webpage
  function initNavigation(params = null) {
    var logElem = document.querySelector("#browseContainer");
    var xhr = new XMLHttpRequest();

    //if no params, just load the top level
    if(params == null) { xhr.open('GET', '/browse/0') } else {
      var paramsInUrl;
      if(params.cat4) {
        paramsInUrl = '/' + params.cat1 + '/' + params.cat2 + '/' + params.cat3 + '/' + params.cat4
      } else if(params.cat3) {
        paramsInUrl = '/' + params.cat1 + '/' + params.cat2 + '/' + params.cat3
      } else if(params.cat2) {
        paramsInUrl = '/' + params.cat1 + '/' + params.cat2
      } else {
        paramsInUrl = '/' + params.cat1
      }

      // adds extra parameter if params has an 'endoftree' property and it == null, indicates impending end of tree
      if(params.hasOwnProperty('endoftree') && params.endoftree == "") {paramsInUrl += '?endoftree=T'}
      xhr.open('GET', '/browse/0' + paramsInUrl)
      //console.log('params sent to server: ', '/browse/0' + paramsInUrl)
    }
    xhr.onload = function() {
        if (xhr.status === 200) {
            console.log('updating innnerhtml')
            logElem.innerHTML = xhr.response;
            addUrlstoNavItems(params, paramsInUrl);
        }
        else {
            console.log('Request failed getting the Browse Navigation Items.  Returned status of ' + xhr.status);
        }
    };
    xhr.send();
  }

  // is executed whenver the nav items change, adds urls if at end of line
  // if not at end of line, maybe add bubble count?
  function addUrlstoNavItems(params, paramsUrl) {
    var targets = document.getElementsByClassName("browseNavItem")
    // iterates over all nav items
    Array.from(targets).forEach((el) => {
      // if there is only one page associated with that nav item,
      // build url [todo]
      paramsUrl = paramsUrl.replace("?endoftree=T", "")
      var url = '/lib' + paramsUrl + '/p' + params.pg
      console.log(url)
      // add it to element (replace google with the built url)
      if(el.getAttribute("numdocs") == 1) {
        el.setAttribute("href", url)
        el.innerHTML = 'Page ' + el.getAttribute('pg')
      }
    });

  }
  // do asap
  initNavigation();

  //listens for a click anywhere on the webpage
  document.addEventListener('click', function (event) {
    // If the clicked element doesn't have the right selector, bail
    if (!event.target.matches('.browseNavItem')) return;

    // Log the clicked element in the console
    console.log(event.target.getAttribute('q'));
    console.log(event.target.getAttribute('cat1'));

    // grabs parameters, adds row title to one of them based on what params are fed
    var params;
    params = {cat1: event.target.getAttribute('cat1'), 
              cat2: event.target.getAttribute('cat2'), 
              cat3: event.target.getAttribute('cat3'), 
              cat4: event.target.getAttribute('cat4'),
              endoftree: event.target.getAttribute('endoftree'),
              pg: event.target.getAttribute('pg'),
              reqFromBreadcrumbs: event.target.getAttribute('breadcrumbs')}
    console.log('params, initDefinition: ', params)
    if(!params.cat1 && !params.reqFromBreadcrumbs) {
      params.cat1 = event.target.getAttribute('q');
    } else if (!params.cat2 && !params.reqFromBreadcrumbs) {
      params.cat2 = event.target.getAttribute('q');
    } else if (!params.cat3 && !params.reqFromBreadcrumbs) {
      params.cat3 = event.target.getAttribute('q');
    } else if (!params.cat4 && !params.reqFromBreadcrumbs) {
      params.cat4 = event.target.getAttribute('q');
    }
    console.log('params: ', params)
    // since nav item was clicked, start a get req for the next menu
    initNavigation(params)

  }, false);


</script>
