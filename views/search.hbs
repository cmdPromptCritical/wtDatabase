<div id="breadcrumbsBar" class="bg-light border-bottom">
  <div class="container">
    <div class="col-12 my-1" id='breadcrumbsBarCentering'>
        <span class="font-weight-bold fs-5 align-center breadcrumsElement"><small>{{searchHits}} results for "{{query}}"</small></span>


        <!--div class="breadcrumsElement settings float-right">
          <div class="btn-group">
            <button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
              (bs5 reference)
            </button>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li><a class="dropdown-item" href="#">Something else here</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="#">Separated link</a></li>
            </ul>
          </div>
        </div-->
        <span class="breadcrumsElement settings float-right">
            <div class="btn-group">
                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Filter by Category
                </button>
                <div class="dropdown-menu dropdown-menu-right">                    
                  <div class="dropdown-item" onclick="event.stopPropagation();">
                    <label>
                      <input type="checkbox" class="check" id="checkAll" > Check All
                    </label>
                  </div>
                  <div class="dropdown-item" onclick="event.stopPropagation();">
                    <label>
                      <input type="checkbox" class="check"> Insight
                    </label>
                  </div>
                  <div class="dropdown-item" onclick="event.stopPropagation();">
                    <label>
                      <input type="checkbox" class="check"> Watchtower
                    </label>
                  </div>
                  <div class="dropdown-item" onclick="event.stopPropagation();">
                    <label>
                      <input type="checkbox" class="check"> Awake!
                    </label>
                  </div>
                  <div class="dropdown-item" onclick="event.stopPropagation();">
                    <label>
                      <input type="checkbox" class="check"> Books
                    </label>
                  </div>
                  <div class="dropdown-item" onclick="event.stopPropagation();">
                    <label>
                      <input type="checkbox" class="check"> Yearbooks
                    </label>
                  </div>
                  <div class="dropdown-item" onclick="event.stopPropagation();">
                    <label>
                      <input type="checkbox" class="check"> Memos
                    </label>
                  </div>
                  <div class="dropdown-item" onclick="event.stopPropagation();">
                    <label>
                      <input type="checkbox" class="check"> Tracts
                    </label>
                  </div>
                  <div class="dropdown-item">
                    <label>
                      <button type="submit" class="btn btn-primary">Apply</button>
                    </label>
                  </div>
                </div>
            </div>
        </span>
        <span class="breadcrumsElement settings float-right">
            <div class="btn-group">
                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Filter by Date
                </button>
                <div class="dropdown-menu dropdown-menu-right">
                  <div class="dropdown-item">
                    <label for="exampleDropdownFormEmail1">Start Year: </label>
                    <input class="form-control" id="drpdwnStartYear" placeholder="1884">
                    <label for="exampleDropdownFormEmail1">End Year: </label>
                    <input class="form-control" id="drpdwnStartYear" placeholder="1924">

                  </div>
                  <div class="dropdown-item">
                    <label>
                      <button type="submit" class="btn btn-primary">Apply</button>
                      <a href="">Cancel</a>
                    </label>
                  </div>
                </div>
            </div>
        </span>

    </div>
  </div>
</div>
<div class="container">
  
  <div class="col-12" id='body'>


    <div class="searchResultsContainer mt-2 w-100 col-xs-12 col-sm-12 excerpt">
    <!-- search results: -->
      {{#if searchResult}}
        {{#each searchResult}}
          <div class="srItem w-100">
            <h3><a href="/lib/{{this.cat1}}/{{this.cat2}}/{{this.cat3}}/p{{this.pg}}">{{this.cat1}} â†’ {{this.cat2}} â†’ {{this.cat3}} â†’ pg{{this.pg}} </a></h3>
            <p>... {{{this.excerpt}}} ...</p>
          </div>
        {{/each}}
      {{else}}
        <div class="srItem w-100 min-vh-100">
          <h3>No results found ðŸ™ƒ</h3>
        </div>
      {{/if}}
    </div>

    <!-- begin pagination -->
    {{#if searchResult}}
      <ul class="pagination">
        <li class="page-item"><a class="page-link" id="pgPrev" href="/search?q=test&p={{pagination.pgPrev}}">Previous</a></li>
        {{#each pagination.pgArr}}
        <li class="page-item" id="pg{{this}}"><a class="page-link" href="/search?q=test&p={{this}}">{{this}}</a></li>
        {{/each}}
        <li class="page-item"><a class="page-link" id="pgNext" href="/search?q=test?p={{pagination.pgNext}}">Next</a></li>
      </ul>
    {{/if}}
    <!-- end pagination -->

    <script>
      // ### pagination of search results
      //fixes links inside search results, particularly the ones in the
      //pagination bar at the bottom by adding search results attribute
      function fixsrLinks(){
        var x = document.querySelectorAll('.pagination .page-link');
        //identifies query
        var query = location.search.split('q=')[1]
        query = query.split('&')[0]
        //converts queryselector to array and iterates for each element (I think)
        Array.from(x).forEach((el) => {
          // Do stuff here
          var tempstr = el.href 
          //console.log('before:', el.href);
          tempstr = tempstr.replace('/search?q=test','/search?q=' + query)
          //console.log('query: ', query);
          el.href = tempstr
          //console.log('after: ', el.href);
        });

        //TODO:
        // delete prev/next buttons when at end of results
      }

      // this sets active page number inside search resutls paginator
      function setActivePg() {
        // grabs page nunber, preprocesses it
        var pgNumber = location.search.split('p=')[1]
        if (pgNumber == null) pgNumber = 1

        // sets page number in pagnated search result to 'active'
        var el = document.getElementById("pg" + pgNumber);
        el.className += " active";

      }
      
      // toggles all/none options in "filter by Category" dropdown when select all/none is clicked
      $("#checkAll").click(function () {
          $(".check").prop('checked', $(this).prop('checked'));
      });
      
      // gets all url parameters , returns an object, check out: https://www.sitepoint.com/get-url-parameters-with-javascript/
      // retrieve data like: getAllUrlParams().q 
      function getAllUrlParams(url) {

        // get query string from url (optional) or window
        var queryString = url ? url.split('?')[1] : window.location.search.slice(1);

        // we'll store the parameters here
        var obj = {};

        // if query string exists
        if (queryString) {

          // stuff after # is not part of query string, so get rid of it
          queryString = queryString.split('#')[0];

          // split our query string into its component parts
          var arr = queryString.split('&');

          for (var i = 0; i < arr.length; i++) {
            // separate the keys and the values
            var a = arr[i].split('=');

            // set parameter name and value (use 'true' if empty)
            var paramName = a[0];
            var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];

            // (optional) keep case consistent
            paramName = paramName.toLowerCase();
            if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();

            // if the paramName ends with square brackets, e.g. colors[] or colors[2]
            if (paramName.match(/\[(\d+)?\]$/)) {

              // create key if it doesn't exist
              var key = paramName.replace(/\[(\d+)?\]/, '');
              if (!obj[key]) obj[key] = [];

              // if it's an indexed array e.g. colors[2]
              if (paramName.match(/\[\d+\]$/)) {
                // get the index value and add the entry at the appropriate position
                var index = /\[(\d+)\]/.exec(paramName)[1];
                obj[key][index] = paramValue;
              } else {
                // otherwise add the value to the end of the array
                obj[key].push(paramValue);
              }
            } else {
              // we're dealing with a string
              if (!obj[paramName]) {
                // if it doesn't exist, create property
                obj[paramName] = paramValue;
              } else if (obj[paramName] && typeof obj[paramName] === 'string'){
                // if property does exist and it's a string, convert it to an array
                obj[paramName] = [obj[paramName]];
                obj[paramName].push(paramValue);
              } else {
                // otherwise add the property
                obj[paramName].push(paramValue);
              }
            }
          }
        }

        return obj;
      }

      var urlParams = getAllUrlParams(window.location.href);

      // do these things onnce page finishes loading
      document.addEventListener('DOMContentLoaded', setActivePg(), false);
      document.addEventListener('DOMContentLoaded', fixsrLinks(), false);
      
      // do these whenever
      // adds the query text to the urls of the search results
      function addQuerytoUrl(query) {
        var x = document.querySelectorAll('.srItem a');
        console.log(x);
        //converts queryselector to array and iterates for each element (I think)
        Array.from(x).forEach((el) => {
          // Do stuff here
          var tempstr = el.href 
          console.log('before:', el.href);
          tempstr = tempstr.concat('?q=' + query)
          console.log('query: ', query);
          el.href = tempstr
          console.log('after: ', el.href);
        });
      }

      addQuerytoUrl(urlParams.q);
    </script>
  </div>
</div>